(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[     59728,       1168]
NotebookOptionsPosition[     58445,       1135]
NotebookOutlinePosition[     58821,       1152]
CellTagsIndexPosition[     58778,       1149]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Calculation on Paul Klee", "Subsection",
 CellChangeTimes->{{3.735235201186624*^9, 
  3.735235206254228*^9}},ExpressionUUID->"c54f278d-bcf8-4923-9da7-\
db9a4c66a6a9"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "image of paul klee", Typeset`newq$$ = 
   "image of paul klee", Typeset`chosen$$ = 
   "Entity[\"Person\", \"PaulKlee::fm5mn\"][EntityProperty[\"Person\", \
\"Image\"]]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {3., 8.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "image of paul klee", 
                  Defer[
                   Entity["Person", "PaulKlee::fm5mn"][
                    EntityProperty["Person", "Image"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Paul Klee\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Person\"", ",", "\"PaulKlee::fm5mn\""}], "]"}],
                    "\"Entity[\\\"Person\\\", \\\"PaulKlee::fm5mn\\\"]\"",
                    "\"person\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Person\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Person\\\", \\\"Image\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"Paul Klee\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Person\"", ",", "\"PaulKlee::fm5mn\""}], "]"}],
                    "\"Entity[\\\"Person\\\", \\\"PaulKlee::fm5mn\\\"]\"",
                    "\"person\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Person\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Person\\\", \\\"Image\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"Paul Klee\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Person\"", ",", "\"PaulKlee::fm5mn\""}], "]"}],
                     "\"Entity[\\\"Person\\\", \\\"PaulKlee::fm5mn\\\"]\"", 
                    "\"person\""}, "Entity"], "[", 
                    TemplateBox[{"\"image\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Person\"", ",", "\"Image\""}], "]"}], 
                    "\"EntityProperty[\\\"Person\\\", \\\"Image\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "image of paul klee", 
                    Defer[
                    Entity["Person", "PaulKlee::fm5mn"][
                    EntityProperty["Person", "Image"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Paul Klee\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Person\"", ",", "\"PaulKlee::fm5mn\""}], "]"}],
                    "\"Entity[\\\"Person\\\", \\\"PaulKlee::fm5mn\\\"]\"",
                    "\"person\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Person\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Person\\\", \\\"Image\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"Paul Klee\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Person\"", ",", "\"PaulKlee::fm5mn\""}], "]"}],
                    "\"Entity[\\\"Person\\\", \\\"PaulKlee::fm5mn\\\"]\"",
                    "\"person\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Person\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Person\\\", \\\"Image\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"Paul Klee\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Person\"", ",", "\"PaulKlee::fm5mn\""}], "]"}],
                     "\"Entity[\\\"Person\\\", \\\"PaulKlee::fm5mn\\\"]\"", 
                    "\"person\""}, "Entity"], "[", 
                    TemplateBox[{"\"image\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Person\"", ",", "\"Image\""}], "]"}], 
                    "\"EntityProperty[\\\"Person\\\", \\\"Image\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[2]:=",ExpressionUUID->"0e18bf4b-f239-4049-bc0f-60dcadbff7e9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
kvX/AP/Kagk=
    "], {{0, 107}, {150, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "Grayscale", ImageResolution -> {300, 300}, 
    Interleaving -> None, MetaInformation -> 
    Association[
     "Source" -> 
      "http://en.wikipedia.org/wiki/File:Paul_Klee_Self_Portrait_1911.jpg", 
      "URL" -> "http://www.wolframcdn.com/waimage/hset028/4ad/\
4ad31444c8614a57487a43ec983eaca4_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150, 107},
  PlotRange->{{0, 150}, {0, 107}}]], "Output",
 CellChangeTimes->{{3.735234350134205*^9, 3.735234350450295*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"3c03138a-9173-4aa9-8fcd-5841ed1613e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeDetect", "[", 
  RowBox[{"%2", ",", "3.3000000000000003`", ",", "0.211`", ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Canny\>\""}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[3]:=",ExpressionUUID->"6409944a-cc6f-4ba9-a676-1d1dc9c6d8ee"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzdmkuOFDEMhiusWHIFbsGWJdtBHGBGNCOE1Eg9SIiLcF4GdSWx4z/xI6ke
RKShqyqJ/XXs2K40bx++3315tW3b0+vnf+7uf76/XO5/fXzzfPPp/PT18Xz6
/OH84/R4urx7+Dvs2/Pf7+0/aynYDmaKTlwLQiXPiD4Ga9oKpuk+Y6+wgEVE
6usS/rnGK+xS5P4o96Vrmae6BFEuwLjQTZ2idtWF4KgA45VKTHm9OAQr/mUT
+1jcZqPLQcF4QuyBecsnOQ3u7BoNqdgXHcJTpYwhVjyjBJfKptkuvIHyTIQl
1BKqhsmTrwKqjeLJMN/u648dibFpqBKcASHo1L5Cyxuk9oKinVXy1gzWNelF
Kv5E/vTHTionS5mXKELzfJ4qGseLfBCAwXMfVSzpZVfEVKQTKrDuQucLZWKf
osQnsHuxZk1oXf0eqrwPm54kuhwZDS+Nn4pGPI7G3ghcKiibNT40FO2SMCuC
VyVPSvMkQHFF9iSjSgSsljpWPb7Wmiw/Ejuz40+HYZFlIVfIowDWQVRbCSdc
JQ74ZajXhuHTL7BYgxrQWQnomT5LBclYUDVLhRR5qJTReUcpVEh2c5gSSCHq
KGJt4FiAir3/gOw50qfaryEA6a1obagyk7JJgT51HEhPbBOWiMkzfSod1Kl0
qmQeN3zJEh5DzBywodnSXFmLRb2ZMNCPBMaMoFwBt/NeROI7wUrVhGwM0ChS
uDOAwnCIFkKcI4515sVE1aIJqxdSmUYRNblJoWB5NdV4PWOxVR8rlP86WEyV
SMpIOQSSPW4IIbVNSh35GtYyKlQP9780XJOgmw+pthrKuW4n1kxh2DVNIp0j
+YPVWk61p5Xu9tOwYI5fQFWrGhQo5Z3AGgrXqMZYnQHo/X4t1qinGwZRRgC+
Fd6Io+2lLiS7FclrKZbpZQnlT2jDIBY737Cnrta11mPFXiWlxyMbriobrA0V
ZmjIrbHkHca6EQ9R2QD8A6uFShgx5gVWSwLgMS/uWnjMTY0I9iEYNOg7ppkW
6+auZaGaKx8izURFznR8wqPvbmaqAFavErbOxHf8uTfLNgcIvsmDO97hEd4c
bSel2AtTebAkgOVVrnOo2puXU6GVarTgAySmzTItuUwYouKXNqq02Wt487vC
LFXGMkHdjuraZzoKD0GRPhmEtHkWqv7deip6znsEVelEarTYrlINykglWtFP
IxUl63WXINgcqb8sVcVjn+A338F0mNBHjqVIbnIxzTqW2iFIpQ+gP3wAj7JQ
4WNApzc3PcVkdWGvP7/ZqaCWFVT5PtWnmvVLN6TyhqMhVf4n7QY1UDW+aaVS
vJ1uP0ZlEE6oWgNqWBpV9vU8dPcqFsXcVOr3USJHqluRbipzVuhR2QKwRCql
TomddVeZoMhcOXiMhTv5/yYpSYeumaEGqvth7syyQG11o+0XTUAwFmZqpHZQ
ZQzaTQJnsn758Ptjf63gw2S1Hhcux0f8Cg8N/zwMZsX24NIGlso7gXYuYl5L
tQprMdUaLORWE96ulwWmJgO7dwLrrPXdVGuqGF1kN+HIMLoAyhpbcLhM4wHO
llOqedlxZNeHeBrN87T9AXkKEuA=
    "], {{0, 107}, {150, 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Bit", ColorSpace -> Automatic, ImageResolution -> {300, 300}, 
    Interleaving -> None, MetaInformation -> 
    Association[
     "Source" -> 
      "http://en.wikipedia.org/wiki/File:Paul_Klee_Self_Portrait_1911.jpg", 
      "URL" -> "http://www.wolframcdn.com/waimage/hset028/4ad/\
4ad31444c8614a57487a43ec983eaca4_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150, 107},
  PlotRange->{{0, 150}, {0, 107}}]], "Output",
 CellChangeTimes->{3.735234375769113*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"db4602bc-4159-48f5-b7fe-249b7333789c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorNegate", "[", "%3", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[4]:=",ExpressionUUID->"4bbdd5b2-dcb6-45ae-bdd6-e069b21a3d4d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzdms1uFDEMx72cOPIKvAVXjlyLeIBWlAohFalFQrwIz8uinSR2/E/8MZkt
ItJ2dyaJ/dvYsT3Zvr37fvPlFRE9vz7/ubn9+f7p6fbXxzfni0+Pz18fHu8/
f3j8cf9w//Tu7u+wb+fX7/Pr9D81SraDmbIT14JwyXtEH4O12wqu6TFjr7CA
RwSNdSn/XOMVfil6f9Tr2rXMU0OCOBdgXOimQVGb6kpwVICJSmWmvHw4BCv/
ZUm8LW57o8tBwXiH2APzVkwyTa78Gh2pOBYd0lO1jClWPqMkl8qn2S+8g4pM
hCXUEqqOKZKvEqqd4tmw2O4bj52J8WloEoIBIenUsUIrGqS2gqKfVfPWHqxL
0stU/MRe9u0gVZClziOO0N3fT5WN41U+CMDgfowql/SKK2Iq1gkVeHdh8IGS
xLsq8RnsVqx5E9pQf4Sq7MOuh1RXIKPhpYlT8Ygn0cQTQUgFZ/PGh46iXxJh
RfCoFElpkQSoPrE9KaiIgbVSx6sn1nqTlVtqZw786TAstizsE/IogHUQ1amG
E6kSB/w6NGrD9OkXWKxJDRisBOxMX6SCZKyouqVCiiJUxuiyowwqJLs7TEmk
EHMUszZwLEAlnn9A9pzpM+3XEYD0VrV2VIXJ2KRAnzkOpCexCWvElJmeagd3
KpuK3OOmD1nKY5iZEzZ0W1oq67G4NzMG/kZgzAwqFHAHz0UsvjMsaiYUY4BG
lcKDARSGQ7QQ6hxxrrMsJqoWXVijkCo0qqgpTQoF60+7mqxnPLYaY6Xy3wBL
qFJJGSmHQLonDKGk9klpIN/CWkaF6uHxl4ZrknTzKdWphXKpO4i1pzAcmoZY
50z+ZLWWU21pZbj9LCyY4xdQtaoGBUp9pbCmwi2qOdZgAHq+X4s16xmGQZQR
gG+lN+Jse5kLKS5V8lqK5XpYQvkT2jCJJc43/Kmrd631WLlHSe3xyIarygZv
Q4UZGnJtLH2Fsa7Ew1R2AP/AaqESRo15gdXSAHjMi7sWHnNVI4J9CAZN+o5p
rsW6umt5qPaVD5nmomJnOjHh2Wc3N1UCa1QJe2fiK3k/mmW7A4TY5MmV7IgI
7462ySj20lQRLA3geZQbHKqO5pVU6KWaLfgESWjzTKOQCVNU8qOPik7+Gt79
rLCXqmC5oK5HdelzHYWnoFifDkLWPA/V+Go9FT/nPYKqdiI1Vmw3qSZlpBGt
+LuTipONumsQ7I7UX5aq4Yl38JvvZDpM6DPHMiR3uZhnHU/tkKSyB/AfPoBH
eajwMWDQm7uearK2sJef3/xUUMsKqnJN7a5l/doNqaLhaEpV/tBmUAdV55te
KsPb+fYTVA7hjKo3oIVlURVfL0M3rxJRLExlfh8jclDbinxTubPCiMoXgDVS
LXVq7Gy7ygXF5urBcyzcKf+bpCYdvmaOGqjth31nlhXq1Dba9qELCM7CzIzU
AaqCwbtZ4CTvl08/P47XCt4kr/WkcD0+41d4aPrnYTArtweXNrBU0Qm8cxHz
WqpVWIup1mAht9rh7XZZ4Go6sEcniM5W3+1qXRVjixwmHB1GF0B5YwsOlzQf
EGwlpbqXHUd2e0ik8TzP2x8L7UaK
    "], {{0, 107}, {150, 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Bit", ColorSpace -> Automatic, ImageResolution -> {300, 300}, 
    Interleaving -> None, MetaInformation -> 
    Association[
     "Source" -> 
      "http://en.wikipedia.org/wiki/File:Paul_Klee_Self_Portrait_1911.jpg", 
      "URL" -> "http://www.wolframcdn.com/waimage/hset028/4ad/\
4ad31444c8614a57487a43ec983eaca4_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150, 107},
  PlotRange->{{0, 150}, {0, 107}}]], "Output",
 CellChangeTimes->{3.735234380096278*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"c2a50836-086f-46a3-8165-07fb10ebc62f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Blur", "[", 
  RowBox[{"%4", ",", "2"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[5]:=",ExpressionUUID->"feb1e6f1-dcd6-415a-943b-2b7fc5daee20"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
h0Fx9f937KA6
    "], {{0, 107}, {150, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Real32", ColorSpace -> Automatic, ImageResolution -> {300, 300}, 
    Interleaving -> None, MetaInformation -> 
    Association[
     "Source" -> 
      "http://en.wikipedia.org/wiki/File:Paul_Klee_Self_Portrait_1911.jpg", 
      "URL" -> "http://www.wolframcdn.com/waimage/hset028/4ad/\
4ad31444c8614a57487a43ec983eaca4_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150, 107},
  PlotRange->{{0, 150}, {0, 107}}]], "Output",
 CellChangeTimes->{3.735235373914475*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e0f1f5f7-0f71-4e56-9188-3ea03a9fde05"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 906},
WindowMargins->{{3, Automatic}, {Automatic, 4}},
WindowStatusArea->None,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 7, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 172, 3, 54, "Subsection",ExpressionUUID->"c54f278d-bcf8-4923-9da7-db9a4c66a6a9"],
Cell[CellGroupData[{
Cell[780, 29, 16399, 378, 72, "WolframAlphaShortInput",ExpressionUUID->"0e18bf4b-f239-4049-bc0f-60dcadbff7e9"],
Cell[17182, 409, 20308, 339, 124, "Output",ExpressionUUID->"3c03138a-9173-4aa9-8fcd-5841ed1613e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37527, 753, 276, 5, 30, "Input",ExpressionUUID->"6409944a-cc6f-4ba9-a676-1d1dc9c6d8ee"],
Cell[37806, 760, 2361, 45, 124, "Output",ExpressionUUID->"db4602bc-4159-48f5-b7fe-249b7333789c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40204, 810, 164, 3, 30, "Input",ExpressionUUID->"4bbdd5b2-dcb6-45ae-bdd6-e069b21a3d4d"],
Cell[40371, 815, 2361, 45, 124, "Output",ExpressionUUID->"c2a50836-086f-46a3-8165-07fb10ebc62f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42769, 865, 180, 4, 30, "Input",ExpressionUUID->"feb1e6f1-dcd6-415a-943b-2b7fc5daee20"],
Cell[42952, 871, 15465, 260, 158, "Output",ExpressionUUID->"e0f1f5f7-0f71-4e56-9188-3ea03a9fde05"]
}, Open  ]]
}, Open  ]]
}
]
*)

